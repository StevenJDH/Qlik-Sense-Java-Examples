/**
 * This file is part of Qlik Sense Java Examples <https://github.com/StevenJDH/Qlik-Sense-Java-Examples>.
 * Copyright (C) 2020 Steven Jenkins De Haro.
 *
 * Qlik Sense Java Examples is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Qlik Sense Java Examples is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Qlik Sense Java Examples.  If not, see <http://www.gnu.org/licenses/>.
 */

package EngineAPI;

import Shared.Interfaces.ChannelListener;
import Shared.QlikAuthCertificate;
import java.io.File;
import java.nio.file.Paths;
import java.util.Arrays;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import org.json.JSONTokener;

/**
 * EngineCallDemo.java (UTF-8)
 * A GUI demo that communicates with the Engine API while using certificates exported from Qlik Sense.
 * 
 * @version 1.0
 * @author Steven Jenkins De Haro
 */
public class EngineCallDemo extends javax.swing.JFrame implements ChannelListener {

    private static final String DEFAULT_CERT_DIRECTORY = Paths.get(System.getenv("programdata"), 
                "Qlik", "Sense", "Repository", "Exported Certificates").toString();
    private QlikWebSocketClient _qlikClient;
    
    /**
     * Creates new form EngineCallDemo
     */
    public EngineCallDemo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel8 = new javax.swing.JLabel();
        txtRootCertPath = new javax.swing.JTextField();
        lblTicket = new javax.swing.JLabel();
        btnRootBrowse = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtOutput = new javax.swing.JTextArea();
        txtAddress = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtClientCertPath = new javax.swing.JTextField();
        btnClientBrowse = new javax.swing.JButton();
        btnSend = new javax.swing.JButton();
        txtClientPassword = new javax.swing.JPasswordField();
        jLabel7 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtRequest = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        btnConnect = new javax.swing.JButton();
        btnDisconnect = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Engine Call Demo");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel8.setText("Server CA Certificate (*.cer):");

        lblTicket.setText("Output:");

        btnRootBrowse.setText("...");
        btnRootBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRootBrowseActionPerformed(evt);
            }
        });

        txtOutput.setEditable(false);
        txtOutput.setBackground(new java.awt.Color(0, 0, 0));
        txtOutput.setColumns(20);
        txtOutput.setForeground(new java.awt.Color(51, 204, 0));
        txtOutput.setLineWrap(true);
        txtOutput.setRows(5);
        jScrollPane1.setViewportView(txtOutput);

        txtAddress.setText("wss://qlikserver1.domain.local:4747/app/");

        jLabel1.setText("WebSocket Address:");

        jLabel6.setText("Client Certificate (*.pfx):");

        btnClientBrowse.setText("...");
        btnClientBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClientBrowseActionPerformed(evt);
            }
        });

        btnSend.setText("Send");
        btnSend.setEnabled(false);
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        jLabel7.setText("Password:");

        txtRequest.setBackground(new java.awt.Color(0, 0, 0));
        txtRequest.setColumns(20);
        txtRequest.setForeground(new java.awt.Color(51, 204, 0));
        txtRequest.setLineWrap(true);
        txtRequest.setRows(5);
        txtRequest.setText("{\n    \"method\": \"GetDocList\",\n    \"handle\": -1,\n    \"id\": 0,\n    \"jsonrpc\": \"2.0\",\n    \"params\": []\n}");
        txtRequest.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtRequestFocusLost(evt);
            }
        });
        jScrollPane2.setViewportView(txtRequest);

        jLabel5.setText("Request (Ctrl+V to Paste):");

        btnConnect.setText("Connect");
        btnConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConnectActionPerformed(evt);
            }
        });

        btnDisconnect.setText("Disconnect");
        btnDisconnect.setEnabled(false);
        btnDisconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisconnectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtClientPassword)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(txtClientCertPath)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnClientBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtRootCertPath))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnRootBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblTicket, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtAddress)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnConnect, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSend, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDisconnect, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtClientCertPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClientBrowse))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addGap(7, 7, 7)
                .addComponent(txtClientPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRootCertPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRootBrowse))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(lblTicket)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSend)
                    .addComponent(btnConnect)
                    .addComponent(btnDisconnect))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnRootBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRootBrowseActionPerformed
        JFileChooser fc = new JFileChooser(DEFAULT_CERT_DIRECTORY);
        fc.setDialogTitle("Open server CA certificate");
        fc.setSelectedFile(new File("root.cer"));
        fc.setFileFilter(new FileNameExtensionFilter("X.509 certificate file (*.cer)", "cer"));

        if(fc.showOpenDialog(this) == JOptionPane.OK_OPTION)
        {
            txtRootCertPath.setText(fc.getSelectedFile().getPath());
        }
    }//GEN-LAST:event_btnRootBrowseActionPerformed

    private void btnClientBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClientBrowseActionPerformed
        JFileChooser fc = new JFileChooser(DEFAULT_CERT_DIRECTORY);
        fc.setDialogTitle("Open client certificate");
        fc.setSelectedFile(new File("client.pfx"));
        fc.setFileFilter(new FileNameExtensionFilter("PKCS#12 certificate file (*.pfx)", "pfx"));

        if(fc.showOpenDialog(this) == JOptionPane.OK_OPTION)
        {
            txtClientCertPath.setText(fc.getSelectedFile().getPath());
        }
    }//GEN-LAST:event_btnClientBrowseActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        _qlikClient.send(txtRequest.getText().trim());
    }//GEN-LAST:event_btnSendActionPerformed

    @Override
    public void responseReceived(String message) {
        txtOutput.setText(tryBeautifying(message));
    }
	
    /**
     * Beautifies JSON text for readability in no particular order, but if the 
     * text is not Valid JSON, then the original text will be returned.
     * @param data Text to be formatted if valid JSON.
     * @return Beautified JSON text or original text.
     */
    private String tryBeautifying(String data) {    
        Object json; // We use an object for this approach rather then rely on exceptions.
        
        try {
            // The value can be a Boolean, Double, Integer, JSONArray, JSONObject, 
            // Long, or String, or the JSONObject.NULL object.
            json = new JSONTokener(data).nextValue();
        } catch (JSONException ex) {
            return data; // If syntax error.
	}
        
        if (json instanceof JSONObject) {
          return new JSONObject(data).toString(4);
        }
        
        if (json instanceof JSONArray) {
            return new JSONArray(data).toString(4);
        }
        
        return data;
    }
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        txtClientCertPath.setEditable(false);
        txtRootCertPath.setEditable(false);
    }//GEN-LAST:event_formWindowOpened

    private void btnConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnectActionPerformed
        char[] clientPass = txtClientPassword.getPassword();
        var cert = new QlikAuthCertificate(txtClientCertPath.getText(), clientPass,
                txtRootCertPath.getText());
        try {
            _qlikClient = new QlikWebSocketClient(txtAddress.getText(), cert);
            _qlikClient.addListener(this);
            // Initiates the websocket connection just like connect(), but blocks
            // until the websocket has connected or failed.
            _qlikClient.connectBlocking();
        } catch (Exception ex) {
            txtOutput.setText("Connection could not be established.");
        }
        
        if (_qlikClient.isOpen()) {
            btnConnect.setEnabled(false);
            btnSend.setEnabled(true);
            btnDisconnect.setEnabled(true);
        }
        
        // Zeros out the password while avoiding the Java String Pool for security.
        Arrays.fill(clientPass, '0');
    }//GEN-LAST:event_btnConnectActionPerformed

    private void btnDisconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisconnectActionPerformed
        try {
            _qlikClient.closeBlocking();
        } catch (InterruptedException ex) {
            txtOutput.setText(ex.getMessage());
        }
        
        if (_qlikClient.isClosed()) {
            btnConnect.setEnabled(true);
            btnSend.setEnabled(false);
            btnDisconnect.setEnabled(false);
        }
    }//GEN-LAST:event_btnDisconnectActionPerformed

    private void txtRequestFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRequestFocusLost
        txtRequest.setText(tryBeautifying(txtRequest.getText()));
    }//GEN-LAST:event_txtRequestFocusLost
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EngineCallDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EngineCallDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EngineCallDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EngineCallDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new EngineCallDemo().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClientBrowse;
    private javax.swing.JButton btnConnect;
    private javax.swing.JButton btnDisconnect;
    private javax.swing.JButton btnRootBrowse;
    private javax.swing.JButton btnSend;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblTicket;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtClientCertPath;
    private javax.swing.JPasswordField txtClientPassword;
    private javax.swing.JTextArea txtOutput;
    private javax.swing.JTextArea txtRequest;
    private javax.swing.JTextField txtRootCertPath;
    // End of variables declaration//GEN-END:variables
}
